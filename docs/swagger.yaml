basePath: /api/v1
definitions:
  domain.Cat:
    properties:
      breed:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      salary:
        type: number
      status:
        type: string
      updated_at:
        type: string
      years_of_experience:
        type: integer
    type: object
  domain.Mission:
    properties:
      cat_id:
        description: Nullable, as a mission can be unassigned
        type: integer
      completed:
        type: boolean
      created_at:
        type: string
      id:
        type: integer
      targets:
        description: Skip DB mapping for nested slice
        items:
          $ref: '#/definitions/domain.Target'
        type: array
      updated_at:
        type: string
    type: object
  domain.Target:
    properties:
      completed:
        type: boolean
      country:
        type: string
      created_at:
        type: string
      id:
        type: integer
      mission_id:
        type: integer
      name:
        type: string
      notes:
        type: string
      updated_at:
        type: string
    type: object
  handler.AssignCatRequest:
    properties:
      cat_id:
        type: integer
    required:
    - cat_id
    type: object
  handler.CompleteMissionRequest:
    properties:
      completed:
        type: boolean
    required:
    - completed
    type: object
  handler.CreateCatRequest:
    properties:
      breed:
        type: string
      name:
        type: string
      salary:
        type: number
      years_of_experience:
        minimum: 0
        type: integer
    required:
    - breed
    - name
    - salary
    - years_of_experience
    type: object
  handler.CreateMissionRequest:
    properties:
      cat_id:
        type: integer
      targets:
        items:
          $ref: '#/definitions/handler.CreateTargetRequest'
        maxItems: 3
        minItems: 1
        type: array
    required:
    - targets
    type: object
  handler.CreateTargetRequest:
    properties:
      country:
        type: string
      name:
        type: string
      notes:
        type: string
    required:
    - country
    - name
    type: object
  handler.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  handler.MessageResponse:
    properties:
      message:
        type: string
    type: object
  handler.UpdateCatSalaryRequest:
    properties:
      salary:
        type: number
    required:
    - salary
    type: object
  handler.UpdateMissionRequest:
    properties:
      cat_id:
        type: integer
    type: object
  handler.UpdateTargetNotesRequest:
    properties:
      notes:
        type: string
    required:
    - notes
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API for managing spy cats, missions, and targets
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Spy Cat Agency API
  version: "1.0"
paths:
  /cats:
    get:
      description: Retrieves a list of all spy cats in the system.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Cat'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: List all spy cats
      tags:
      - cats
    post:
      consumes:
      - application/json
      description: Adds a new spy cat to the system. Breed must be valid according
        to TheCatAPI.
      parameters:
      - description: Cat to create
        in: body
        name: cat
        required: true
        schema:
          $ref: '#/definitions/handler.CreateCatRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Cat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Create a new spy cat
      tags:
      - cats
  /cats/{id}:
    delete:
      description: Removes a spy cat from the system.
      parameters:
      - description: Cat ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Delete a spy cat
      tags:
      - cats
    get:
      description: Retrieves details of a specific spy cat.
      parameters:
      - description: Cat ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Cat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get a spy cat by ID
      tags:
      - cats
  /cats/{id}/salary:
    patch:
      consumes:
      - application/json
      description: Updates the salary of a specific spy cat.
      parameters:
      - description: Cat ID
        in: path
        name: id
        required: true
        type: integer
      - description: New salary
        in: body
        name: salary
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateCatSalaryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Cat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Update a spy cat's salary
      tags:
      - cats
  /missions:
    get:
      description: Retrieves a list of all missions.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Mission'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: List all missions
      tags:
      - missions
    post:
      consumes:
      - application/json
      description: Creates a new mission with 1 to 3 targets. Optionally assign a
        cat during creation.
      parameters:
      - description: Mission to create
        in: body
        name: mission
        required: true
        schema:
          $ref: '#/definitions/handler.CreateMissionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Mission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Create a new mission
      tags:
      - missions
  /missions/{id}:
    delete:
      description: Deletes a mission if it is not assigned to a cat.
      parameters:
      - description: Mission ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Delete a mission
      tags:
      - missions
    get:
      description: Retrieves details of a specific mission, including its targets.
      parameters:
      - description: Mission ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Mission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get a mission by ID
      tags:
      - missions
    patch:
      consumes:
      - application/json
      description: Updates mission details like assigned cat.
      parameters:
      - description: Mission ID
        in: path
        name: id
        required: true
        type: integer
      - description: Mission updates
        in: body
        name: mission
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateMissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Mission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Update a mission
      tags:
      - missions
  /missions/{id}/assign-cat:
    patch:
      consumes:
      - application/json
      description: Assigns an available spy cat to an existing mission.
      parameters:
      - description: Mission ID
        in: path
        name: id
        required: true
        type: integer
      - description: Cat to assign
        in: body
        name: cat
        required: true
        schema:
          $ref: '#/definitions/handler.AssignCatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Assign a cat to a mission
      tags:
      - missions
  /missions/{id}/complete:
    patch:
      consumes:
      - application/json
      description: Manually marks a mission as completed or uncompleted.
      parameters:
      - description: Mission ID
        in: path
        name: id
        required: true
        type: integer
      - description: Completion status
        in: body
        name: completion
        required: true
        schema:
          $ref: '#/definitions/handler.CompleteMissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Mission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Complete/uncomplete a mission
      tags:
      - missions
  /missions/{id}/targets:
    post:
      consumes:
      - application/json
      description: Adds a new target to an existing, non-completed mission.
      parameters:
      - description: Mission ID
        in: path
        name: id
        required: true
        type: integer
      - description: Target to add
        in: body
        name: target
        required: true
        schema:
          $ref: '#/definitions/handler.CreateTargetRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Target'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Add a target to a mission
      tags:
      - missions
  /targets/{id}:
    delete:
      description: Deletes a target from a mission if it is not yet completed.
      parameters:
      - description: Target ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Delete a target
      tags:
      - targets
  /targets/{id}/complete:
    patch:
      description: Marks a target as complete. If all targets in the mission are complete,
        the mission is also marked as complete.
      parameters:
      - description: Target ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Target'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Complete a target
      tags:
      - targets
  /targets/{id}/notes:
    patch:
      consumes:
      - application/json
      description: Updates the notes for a specific target if it is not completed.
      parameters:
      - description: Target ID
        in: path
        name: id
        required: true
        type: integer
      - description: New notes
        in: body
        name: notes
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateTargetNotesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Target'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Update target notes
      tags:
      - targets
swagger: "2.0"
